AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Tic-Tac-Toe Game

Globals:
    Api:
        Cors:
            AllowMethods: "'GET,POST,OPTIONS'"
            AllowHeaders: "'Content-Type,X-Session-Id'"
            AllowOrigin: "'*'"
                   
Resources:
  TicTacToeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: backend/
      Handler: index.handler
      Runtime: nodejs18.x
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
        - AWSLambdaBasicExecutionRole
      Events:
        TicTacToeAPI:
          Type: Api
          Properties:
            Path: /play
            Method: post

  TicTacToeWebsite:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: OAI for TicTacToe website

  TicTacToeBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TicTacToeWebsite
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOAI.S3CanonicalUserId
            Action: s3:GetObject
            Resource: !Join ['', ['arn:aws:s3:::', !Ref TicTacToeWebsite, '/*']]

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: S3Origin
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
          # Add these lines
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # CachingDisabled policy
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt TicTacToeWebsite.RegionalDomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOAI}"

Outputs:
  # Update WebsiteURL output
  WebsiteURL:
    Description: "CloudFront distribution domain name"
    Value: !GetAtt CloudFrontDistribution.DomainName